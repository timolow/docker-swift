[DEFAULT]
bind_ip = $CLIENT_NETWORK
bind_port = 6000
keep_idle = 600
backlog = 4096
workers = auto
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = true
# NOTE: since we always deploy a separate replication-only object-server
# and that server uses a different config file than this one, it doesn't
# hurt if we put servers_per_port here in [DEFAULT], so we do.
servers_per_port = 4
node_timeout = 3
conn_timeout = 0.5
network_chunk_size = 8192
disk_chunk_size = 65536
log_address = /dev/log
log_level = INFO
log_statsd_host = 127.0.0.1
log_statsd_port = 8133
container_update_timeout = 1.0
reclaim_age = 2419200
fallocate_reserve = 26214400
expiring_objects_container_divisor = 86400
keep_cache_size = 5242880
keep_cache_private = False

[pipeline:main]
pipeline = healthcheck recon object-server

[app:object-server]
use = egg:swift#object
max_upload_time = 86400
slow = 0
mb_per_sync = 512
log_requests = True
replication_server = False
disk_chunk_size = 65536
allowed_headers = Content-Disposition, Content-Encoding, X-Delete-At, X-Object-Manifest, X-Static-Large-Object, Expires, Cache-Control, Content-Language, X-Robots-Tag
nice_priority = 0
ionice_class = IOPRIO_CLASS_BE
ionice_priority = 4

[filter:healthcheck]
use = egg:swift#healthcheck
# You can override the default log routing for this filter here:
# set log_name = healthcheck
# set log_facility = LOG_LOCAL0
# set log_level = INFO
# set log_headers = False

[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift
recon_lock_path = /var/cache/swift

[object-updater]
interval = 300
updater_workers = 4
concurrency = 8
node_timeout = 3
conn_timeout = 0.5
objects_per_second = 200.0
slowdown = 0.0
nice_priority = 0
ionice_class = IOPRIO_CLASS_BE
ionice_priority = 4

[object-auditor]
disk_chunk_size = 1048576
files_per_second = 20.0
bytes_per_second = 10000000.0
zero_byte_files_per_second = 50
rsync_tempfile_timeout = 4500
nice_priority = 0
ionice_class = IOPRIO_CLASS_BE
ionice_priority = 4
