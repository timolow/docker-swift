
[DEFAULT]
log_address = /dev/log
log_level = INFO
log_statsd_host = 127.0.0.1
log_statsd_port = 8133

log_msg_template = {client_ip} {remote_addr} {end_time.datetime} {method} {path} {protocol} {status_int} {referer} {user_agent} {auth_token} {bytes_recvd} {bytes_sent} {client_etag} {transaction_id} {headers} {request_time} {source} {log_info} {start_time} {end_time} {policy_index} {ttfb} {account} {container} {object} {wire_status_int}



[container-reconciler]
# The reconciler will re-attempt reconciliation if the source object is not
# available up to reclaim_age seconds before it gives up and deletes the entry
# in the queue.
reclaim_age = 604800
# The cycle time of the daemon
interval = 30
# Server errors from requests will be retried by default
request_tries = 3
nice_priority = 0

# Proxy server config here is for InternalClient
[pipeline:main]
pipeline = catch_errors internal-logging cache proxy-server


[app:proxy-server]
use = egg:swift#proxy
# Configured as per proxy-server conf
account_autocreate = true
allow_account_management = true
node_timeout = 3
conn_timeout = 0.5
error_suppression_interval = 60
error_suppression_limit = 10
# we configure those here like we do in the real proxy server.
read_affinity = 
write_affinity = 
# The valid values for sorting_method are "shuffle" and "timing"
sorting_method = timing

[filter:cache]
use = egg:swift#memcache

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:internal-logging]
use = egg:swift#proxy_logging
set access_log_facility = LOG_LOCAL2
access_log_statsd_metric_prefix = internal



[filter:formpost]

use = egg:swift#formpost





[filter:authtoken]

username = swift
delay_auth_decision = true
password = 
project_name = service
signing_dir = /var/cache/swift
user_domain_name = default
cache = swift.cache
use = egg:keystonemiddleware#auth_token
auth_type = password
token_cache_time = 300
auth_url = $KEYSTONE_ENDPOINT
http_request_max_retries = 1
include_service_catalog = False
www_authenticate_uri = $KEYSTONE_ENDPOINT
http_connect_timeout = 4
revocation_cache_time = 60
project_domain_name = default





[filter:versioned_writes]

allow_object_versioning = True
use = egg:swift#versioned_writes
__version__ = 0.0.10-2
allow_versioned_writes = true





[filter:tempurl]

outgoing_remove_headers = x-object-meta-*
use = egg:swift#tempurl
methods = GET HEAD POST PUT DELETE
incoming_remove_headers = x-timestamp
outgoing_allow_headers = x-object-meta-public-*
incoming_allow_headers = 





#[filter:s3api]

#max_upload_part_num = 10000
#use = egg:swift#s3api
#__version__ = 1.12.0.10-2
#storage_domain = ss.eth0.com
#s3_acl = False
#ratelimit_as_client_error = True
#check_bucket_owner = False
#max_parts_listing = 1000
#allow_multipart_uploads = True
#max_bucket_listing = 1000
#multi_delete_concurrency = 10
#auth_pipeline_check = False
#max_multi_delete_objects = 1000
#location = us-east-1
#allow_no_owner = False
#force_swift_request_proxy_log = True
#dns_compliant_bucket_names = False
#use_async_delete = False
#cors_preflight_allow_origin = *





[filter:dlo]

max_get_time = 86400
rate_limit_segments_per_sec = 1
rate_limit_after_segment = 10
use = egg:swift#dlo





[filter:symlink]

use = egg:swift#symlink





[filter:slo]

use = egg:swift#slo
delete_concurrency = 10
max_get_time = 86400
min_segment_size = 1048576
yield_frequency = 10
max_manifest_size = 20971520
max_manifest_segments = 10000
rate_limit_after_segment = 10
concurrency = 10
rate_limit_segments_per_sec = 0
allow_async_delete = False



[filter:keystoneauth]

use = egg:swift#keystoneauth
operator_roles = admin, swiftoperator
reseller_prefix = KEY_
reseller_admin_role = ResellerAdmin





[filter:copy]

object_post_as_copy = False
use = egg:swift#copy





